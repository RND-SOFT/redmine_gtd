.contextual
  - if !@query.new_record? && @query.editable_by?(User.current)
    = link_to l(:button_edit), edit_query_path(@query), :class => 'icon icon-edit'
    = delete_link query_path(@query)
%h2= @query.new_record? ? l(:label_issue_plural) : h(@query.name)
- html_title(@query.new_record? ? l(:label_issue_plural) : @query.name)
= form_tag({ :controller => 'gtd', :action => 'index', :project_id => @project }, |
  :method => :get, :id => 'query_form') do                                           |
  = hidden_field_tag 'set_filter', '1'
  #query_form_content.hide-when-print
    %fieldset#filters{:class => "collapsible #{@query.new_record? ? "" : "collapsed"}"}
      %legend{:onclick => "toggleFieldset(this);"}= l(:label_filter_plural)
      %div{:style => @query.new_record? ? "" : "display: none;"}
        = render :partial => 'queries/filters', :locals => {:query => @query}
    %fieldset.collapsible.collapsed
      %legend{:onclick => "toggleFieldset(this);"}= l(:label_options)
      %div{:style => "display: none;"}
        %table
          %tr
            %td= l(:field_column_names)
            %td= render_query_columns_selection(@query)
          %tr
            %td
              %label{:for => "group_by"}= l(:field_group_by)
            %td= select_tag('group_by',                                                            |
                        options_for_select(                                                       |
                          [[]] + @query.groupable_columns.collect {|c| [c.caption, c.name.to_s]}, |
                          @query.group_by)                                                        |
                )                                                                                 |
          %tr
            %td= l(:button_show)
            %td= available_block_columns_tags(@query)
  %p.buttons.hide-when-print
    = link_to_function l(:button_apply), 'submit_query_form("query_form")', :class => 'icon icon-checked'
    = link_to l(:button_clear), { :set_filter => 1, :project_id => @project }, :class => 'icon icon-reload'
    - if @query.new_record? && User.current.allowed_to?(:save_queries, @project, :global => true)
      = link_to_function l(:button_save),                                                                                                        |
        "$('#query_form').attr('action', '#{ @project ? new_project_query_path(@project) : new_query_path }'); submit_query_form('query_form')", |
        :class => 'icon icon-save'                                                                                                               |
%big 
  Создать задачу в проекте: 
  = raw @projects_link.map{|p| link_to(p[:short], p[:url])}.join(", ")
= error_messages_for 'query'
- if @query.valid?
  - if @issues.empty?
    %p.nodata= l(:label_no_data)
  - else
    = render partial: 'gtd/list_simple', locals: {issues: @issues, issuesactual: @issuesactual, query: @query, project: @project}
    %p.pagination= pagination_links_full @issue_pages, @issue_count
  - other_formats_links do |f|
    = f.link_to 'Atom', :url => params.merge(:key => User.current.rss_key)
    = f.link_to 'CSV', :url => params, :onclick => "showModal('csv-export-options', '330px'); return false;"
    = f.link_to 'PDF', :url => params
  #csv-export-options{:style => "display:none;"}
    %h3.title= l(:label_export_options, :export_format => 'CSV')
    = form_tag(params.merge({:format => 'csv',:page=>nil}), :method => :get, :id => 'csv-export-form') do
      %p
        %label
          = radio_button_tag 'columns', '', true
          = l(:description_selected_columns)
        %br/
        %label
          = radio_button_tag 'columns', 'all'
          = l(:description_all_columns)
      %p
        %label
          = check_box_tag 'description', '1', @query.has_column?(:description)
          = l(:field_description)
      %p.buttons
        = submit_tag l(:button_export), :name => nil, :onclick => "hideModal(this);"
        = submit_tag l(:button_cancel), :name => nil, :onclick => "hideModal(this);", :type => 'button'
= call_hook(:view_issues_index_bottom, { :issues => @issues, :project => @project, :query => @query })
/ - content_for :sidebar do
/   = render :partial => 'issues/sidebar'
- content_for :header_tags do
  = auto_discovery_link_tag(:atom,                |
    {:query_id => @query, :format => 'atom',      |
     :page => nil, :key => User.current.rss_key}, |
    :title => l(:label_issue_plural))             |
  -#
  = auto_discovery_link_tag(:atom,                  |
    {:controller => 'journals', :action => 'index', |
     :query_id => @query, :format => 'atom',        |
     :page => nil, :key => User.current.rss_key},   |
    :title => l(:label_changes_details))            |
= context_menu issues_context_menu_path
