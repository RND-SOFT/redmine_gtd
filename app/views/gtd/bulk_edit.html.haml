%h2= @copy ? l(:button_copy) : l(:label_bulk_edit_selected_issues)
- if @saved_issues && @unsaved_issues.present?
  #errorExplanation
    %span
      = l(:notice_failed_to_save_issues,                         |
        :count => @unsaved_issues.size,                          |
        :total => @saved_issues.size,                            |
        :ids => @unsaved_issues.map {|i| "##{i.id}"}.join(', ')) |
    %ul
      - bulk_edit_error_messages(@unsaved_issues).each do |message|
        %li= message
%ul#bulk-selection
  - @issues.each do |issue|
    = content_tag 'li', link_to_issue(issue)
= form_tag(bulk_update_issues_path, :id => 'bulk_edit_form') do
  = @issues.collect {|i| hidden_field_tag('ids[]', i.id)}.join("\n").html_safe
  .box.tabular
    %fieldset.attributes
      %legend= l(:label_change_properties)
      .splitcontentleft
        - if @allowed_projects.present?
          %p
            %label{:for => "issue_project_id"}= l(:field_project)
            = select_tag('issue[project_id]',                                                                             |
              content_tag('option', l(:label_no_change_option), :value => '') +                                           |
                project_tree_options_for_select(@allowed_projects, :selected => @target_project),                         |
              :onchange => "updateBulkEditFrom('#{escape_javascript url_for(:action => 'bulk_edit', :format => 'js')}')") |
        %p
          %label{:for => "issue_tracker_id"}= l(:field_tracker)
          = select_tag('issue[tracker_id]',                                                        |
            content_tag('option', l(:label_no_change_option), :value => '') +                      |
            options_from_collection_for_select(@trackers, :id, :name, @issue_params[:tracker_id])) |
        - if @available_statuses.any?
          %p
            %label{:for => "issue_status_id"}= l(:field_status)
            = select_tag('issue[status_id]',                                                                  |
              content_tag('option', l(:label_no_change_option), :value => '') +                               |
              options_from_collection_for_select(@available_statuses, :id, :name, @issue_params[:status_id])) |
        - if @safe_attributes.include?('priority_id')
          %p
            %label{:for => "issue_priority_id"}= l(:field_priority)
            = select_tag('issue[priority_id]',                                                                   |
              content_tag('option', l(:label_no_change_option), :value => '') +                                  |
              options_from_collection_for_select(IssuePriority.active, :id, :name, @issue_params[:priority_id])) |
        - if @safe_attributes.include?('assigned_to_id')
          %p
            %label{:for => "issue_assigned_to_id"}= l(:field_assigned_to)
            = select_tag('issue[assigned_to_id]',                                                                                  |
              content_tag('option', l(:label_no_change_option), :value => '') +                                                    |
              content_tag('option', l(:label_nobody), :value => 'none', :selected => (@issue_params[:assigned_to_id] == 'none')) + |
              principals_options_for_select(@assignables, @issue_params[:assigned_to_id]))                                         |
        - if @safe_attributes.include?('category_id')
          %p
            %label{:for => "issue_category_id"}= l(:field_category)
            = select_tag('issue[category_id]', content_tag('option', l(:label_no_change_option), :value => '') +              |
              content_tag('option', l(:label_none), :value => 'none', :selected => (@issue_params[:category_id] == 'none')) + |
              options_from_collection_for_select(@categories, :id, :name, @issue_params[:category_id]))                       |
        - if @safe_attributes.include?('fixed_version_id')
          %p
            %label{:for => "issue_fixed_version_id"}= l(:field_fixed_version)
            = select_tag('issue[fixed_version_id]', content_tag('option', l(:label_no_change_option), :value => '') +              |
              content_tag('option', l(:label_none), :value => 'none', :selected => (@issue_params[:fixed_version_id] == 'none')) + |
              version_options_for_select(@versions.sort, @issue_params[:fixed_version_id]))                                        |
        - @custom_fields.each do |custom_field|
          %p
            %label= h(custom_field.name)
            = custom_field_tag_for_bulk_edit('issue', custom_field, @projects, @issue_params[:custom_field_values][custom_field.id.to_s])
        - if @copy && @attachments_present
          = hidden_field_tag 'copy_attachments', '0'
          %p
            %label{:for => "copy_attachments"}= l(:label_copy_attachments)
            = check_box_tag 'copy_attachments', '1', params[:copy_attachments] != '0'
        - if @copy && @subtasks_present
          = hidden_field_tag 'copy_subtasks', '0'
          %p
            %label{:for => "copy_subtasks"}= l(:label_copy_subtasks)
            = check_box_tag 'copy_subtasks', '1', params[:copy_subtasks] != '0'
        = call_hook(:view_issues_bulk_edit_details_bottom, { :issues => @issues })
      .splitcontentright
        - if @safe_attributes.include?('is_private')
          %p
            %label{:for => "issue_is_private"}= l(:field_is_private)
            = select_tag('issue[is_private]', content_tag('option', l(:label_no_change_option), :value => '') +              |
              content_tag('option', l(:general_text_Yes), :value => '1', :selected => (@issue_params[:is_private] == '1')) + |
              content_tag('option', l(:general_text_No), :value => '0', :selected => (@issue_params[:is_private] == '0')))   |
        - if @safe_attributes.include?('parent_issue_id') && @project
          %p
            %label{:for => "issue_parent_issue_id"}= l(:field_parent_issue)
            = text_field_tag 'issue[parent_issue_id]', '', :size => 10, :value => @issue_params[:parent_issue_id]
            %label.inline
              = check_box_tag 'issue[parent_issue_id]', 'none', (@issue_params[:parent_issue_id] == 'none'), :id => nil, :data => {:disables => '#issue_parent_issue_id'}
              = l(:button_clear)
          = javascript_tag "observeAutocompleteField('issue_parent_issue_id', '#{escape_javascript auto_complete_issues_path(:project_id => @project)}')"
        - if @safe_attributes.include?('start_date')
          %p
            %label{:for => "issue_start_date"}= l(:field_start_date)
            = text_field_tag 'issue[start_date]', '', :value => @issue_params[:start_date], :size => 10
            = calendar_for('issue_start_date')
            %label.inline
              = check_box_tag 'issue[start_date]', 'none', (@issue_params[:start_date] == 'none'), :id => nil, :data => {:disables => '#issue_start_date'}
              = l(:button_clear)
        - if @safe_attributes.include?('due_date')
          %p
            %label{:for => "issue_due_date"}= l(:field_due_date)
            = text_field_tag 'issue[due_date]', '', :value => @issue_params[:due_date], :size => 10
            = calendar_for('issue_due_date')
            %label.inline
              = check_box_tag 'issue[due_date]', 'none', (@issue_params[:due_date] == 'none'), :id => nil, :data => {:disables => '#issue_due_date'}
              = l(:button_clear)
        - if @safe_attributes.include?('done_ratio') && Issue.use_field_for_done_ratio?
          %p
            %label{:for => "issue_done_ratio"}= l(:field_done_ratio)
            = select_tag 'issue[done_ratio]', options_for_select([[l(:label_no_change_option), '']] + (0..10).to_a.collect {|r| ["#{r*10} %", r*10] }, @issue_params[:done_ratio])
    %fieldset
      %legend= l(:field_notes)
      = text_area_tag 'notes', @notes, :cols => 60, :rows => 10, :class => 'wiki-edit'
      = wikitoolbar_for 'notes'
  %p
    - if @copy
      = hidden_field_tag 'copy', '1'
      = submit_tag l(:button_copy)
      = submit_tag l(:button_copy_and_follow), :name => 'follow'
    - elsif @target_project
      = submit_tag l(:button_move)
      = submit_tag l(:button_move_and_follow), :name => 'follow'
    - else
      = submit_tag l(:button_submit)
= javascript_tag do
  $(window).load(function(){
  $(document).on('change', 'input[data-disables]', function(){
  if ($(this).attr('checked')){
  $($(this).data('disables')).attr('disabled', true).val('');
  } else {
  $($(this).data('disables')).attr('disabled', false);
  }
  });
  });
  $(document).ready(function(){
  $('input[data-disables]').trigger('change');
  });
